{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","utils/objects-helpers.js","redux/users-reducer.js","assets/images/preloader.svg","api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","redux/sidebar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/preloader/Preloader.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messagesData","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","getUsersThunkCreator","dispath","a","usersAPI","getUsers","data","totalCount","followUnfollowFlow","usersId","apiMethod","actionCreator","resultCode","followThunkCreator","follow","bind","unFollowThunkCreator","unfollow","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","Music","Settings","Header","props","header","src","loginBlock","isAuth","onClick","logoutThunk","href","SET_USER_DATA","initialized","setAuthUserData","payload","getAuthUserThunk","dispatch","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","component","Input","placeholder","validate","required","style","formSummaryError","loginThunk","stopSubmit","_error","formData","sidebarReducer","reducers","combineReducers","MessagesPage","ProfilePage","profileReducer","SidebarPage","usersPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","path","render","fallback","Preloader","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","TextArea","input","meta","touched","hasError","styles","formControl","value","maxLengthCreator","maxLength","length","postData","likesCount","newPostText","profile","addPostActionCreator","setStatus","setUserProfile","getUserProfileThunkCreator","getUserStatusThunkCreator","userID","updateStatusThunkCreator","numberOfPost"],"mappings":"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","file":"static/js/main.0347e455.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3fk9f\",\"item\":\"Navbar_item__2ktHh\",\"activeLink\":\"Navbar_activeLink__15aje\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n        dialogs: [\r\n            {id: 1, name: 'Dimych'},\r\n            {id: 2, name: 'Andrey'},\r\n            {id: 3, name: 'Sveta'},\r\n            {id: 4, name: 'Sasha'}\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: 'Hi'},\r\n            {id: 2, message: 'How is your it-kamasutra?'},\r\n            {id: 3, message: 'Da da!'},\r\n            {id: 4, message: 'Yo!'}\r\n        ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 5, message: action.newMessageBody}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((user) => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps};\r\n        } else\r\n            return user;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FAKE\": {\r\n            return {\r\n                ...state,\r\n                // users: state.users.map((user) => {\r\n                //     if (user.id === action.userId) {\r\n                //         return {...user, followed: true};\r\n                //     } else\r\n                //         return user;\r\n                // })\r\n            }\r\n        }\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray (state.users, action.userId, \"id\", {followed: true})\r\n                // users: state.users.map((user) => {\r\n                //     if (user.id === action.userId) {\r\n                //         return {...user, followed: true};\r\n                //     } else\r\n                //         return user;\r\n                // })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray (state.users, action.userId, \"id\", {followed: false})\r\n                // users: state.users.map((user) => {\r\n                //     if (user.id === action.userId) {\r\n                //         return {...user, followed: false};\r\n                //     } else\r\n                //         return user;\r\n                // })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] :\r\n                    [...state.followingInProgress.filter(userId => userId != action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unFollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispath) => {\r\n        dispath(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispath(setUsers(data.items));\r\n        dispath(setTotalUsersCount(data.totalCount));\r\n        dispath(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispath, usersId, apiMethod, actionCreator) => {\r\n    dispath(toggleFollowingInProgress(true, usersId));\r\n    let data = await apiMethod(usersId);\r\n    if (data.resultCode == 0) {\r\n        dispath(actionCreator(usersId))\r\n    }\r\n    dispath(toggleFollowingInProgress(false, usersId));\r\n}\r\n\r\nexport const followThunkCreator = (usersId) => {\r\n    return async (dispath) => {\r\n        followUnfollowFlow  (dispath, usersId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unFollowThunkCreator = (usersId) => {\r\n    return async (dispath) => {\r\n        followUnfollowFlow  (dispath, usersId, usersAPI.unfollow.bind(usersAPI), unFollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.fea7bf8f.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"7e2cbe93-5d13-47f9-8e08-ad572dc60652\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow  (id)  {\r\n        return instance.post(`follow/${id}`).then(response => response.data);\r\n    },\r\n    unfollow (id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data);\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`/profile/status/${userId}`).then(response => response.data);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`/profile/status/`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    me(){\r\n        return instance.get('auth/me').then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post('auth/login', {email, password, rememberMe}).then(response => response.data);\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login').then(response => response.data);\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n      <div>\r\n          News\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n      <div>\r\n          Music\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n      <div>\r\n          Settings\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/ru/b/b7/Discord_logo_svg.svg'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} <a onClick={props.logoutThunk} href='#'>logout</a></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-net/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    initialized: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: action.payload.isAuth,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserThunk = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    } else {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const loginThunk = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserThunk());\r\n    } else {\r\n        let action = stopSubmit(\"login\", {_error: \"Email or password is wrong\"});\r\n        dispatch(action);\r\n    }\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunk} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header  {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(HeaderContainer);\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={Input} placeholder={\"Login\"} name={\"email\"} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} type={\"checkbox\"} name={\"rememberMe\"}/> remember me\r\n            </div>\r\n            {error &&\r\n            <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginThunk(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(Login);","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    MessagesPage: dialogsReducer,\r\n    ProfilePage: profileReducer,\r\n    SidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React, {Suspense} from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport Navbar from './components/Navbar/Navbar';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {getAuthUserThunk} from \"./redux/auth-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n//import UsersContainer from \"./components/Users/UsersContainer\";\nconst UsersContainer = React.lazy(() => import (\"./components/Users/UsersContainer\"));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.getAuthUserThunk();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        } else\n            return (\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n\n                        {/*<Route path='/profile/:userId?' render={() => <Suspense fallback={<Preloader/>}>*/}\n                        {/*    <ProfileContainer/>*/}\n                        {/*</Suspense>}/>*/}\n\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n\n                        <Suspense fallback={<Preloader/>}>\n                            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        </Suspense>\n                        <Suspense fallback={<Preloader/>}>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                        </Suspense>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                </div>\n            );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.auth.initialized\n})\n\n// export default compose( //от compose крашится\n//     withRouter,\n//     connect(mapStateToProps, {getAuthUserThunk})(App)\n// );\n\nlet AppContainer = withRouter(connect(mapStateToProps, {getAuthUserThunk})(App));\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp;","import React, {Suspense} from 'react';\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport SamuraiJSApp from \"./App\";\n\n//for test/lesson\n// setInterval(() => {\n//      store.dispatch({type: \"FAKE\"});\n// }, 1000);\n\nReactDOM.render(\n    //<React.StrictMode>\n        <SamuraiJSApp/>,\n    //</React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1KeYu\",\"error\":\"FormsControls_error__qM14t\",\"formSummaryError\":\"FormsControls_formSummaryError__2PYEy\"};","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\"\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const TextArea = ({input, meta: {touched, error}}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n            <textarea {...input} />\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, type,  ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n            <input {...input} type={type}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","export const required = (value) => {\r\n    if (value)\r\n        return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength)\r\n        return `Max length is more then ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ajef\",\"loginBlock\":\"Header_loginBlock__2PodK\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELL_POST = 'DELL_POST';\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: \"It's my first post\", likesCount: 30},\r\n        {id: 3, message: 'Yo!', likesCount: 1},\r\n        {id: 4, message: 'Yo!', likesCount: 0}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"no status\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, {id: 5, message: action.newPostText, likesCount: 0}],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case DELL_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData.filter(post => post.id != action.numberOfPost)],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS : {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePostActionCreator = (numberOfPost) => ({type: DELL_POST, numberOfPost});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const getUserProfileThunkCreator = (userId) => async (dispath) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispath(setUserProfile(response));\r\n}\r\n\r\nexport const getUserStatusThunkCreator = (userID) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userID);\r\n    dispatch(setStatus(response));\r\n}\r\n\r\nexport const updateStatusThunkCreator = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status))\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}