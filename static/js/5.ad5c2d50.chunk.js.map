{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","dialogsElements","dialogs","map","key","messagesElements","messagesData","dialogsItems","messages","value","sendMessage","newMessageBody","DialogsContainer","compose","MessagesPage","dispatch","addMessageActionCreator"],"mappings":"8MAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OADhB,kBAAC,IAAD,CAAUC,GAAI,eAJU,GACXC,IAAML,WAQtC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCjB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCYpMC,EATI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,QCCvBC,EANC,SAACd,GACb,OACI,yBAAMS,UAAWC,IAAEK,SAAUf,EAAMe,U,kCCArCC,EAAeC,YAAiB,IAgBvBC,EAFaC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACnB,GACpB,OACI,0BAAMqB,SAAUrB,EAAMsB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,qBAAsBC,SAAY,CAACC,IAAUZ,MAElH,6BACI,kBAACO,EAAA,EAAD,CAAOC,UAAW,UAAlB,oBCqBDK,EA7BC,SAAC7B,GACb,IAAI8B,EAAkB9B,EAAM+B,QAAQC,KAEhC,SAAAD,GAAO,OAAK,kBAAC,EAAD,CAAYlB,KAAMkB,EAAQlB,KAAMoB,IAAKF,EAAQvB,GAAIA,GAAIuB,EAAQvB,QAGzE0B,EAAmBlC,EAAMmC,aAAaH,KACtC,SAAAG,GAAY,OAAK,kBAAC,EAAD,CAASpB,QAASoB,EAAapB,QAASkB,IAAKE,EAAa3B,QAO/E,OACI,6BACI,yBAAKC,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAE0B,cACbN,GAEL,yBAAKrB,UAAWC,IAAE2B,UACbH,GAED,kBAAC,EAAD,CAAqBb,SAbf,SAACiB,GACnBtC,EAAMuC,YAAYD,EAAME,sB,wBCO5BC,EAAmBC,YACnBvC,aAlBkB,SAACV,GACnB,MAAO,CACHsC,QAAStC,EAAMkD,aAAaZ,QAC5BI,aAAc1C,EAAMkD,aAAaR,aACjCK,eAAgB/C,EAAMkD,aAAaH,mBAKlB,SAACI,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,YAAwBL,SAOzC5C,IAFmB8C,CAEDb,GAEPY","file":"static/js/5.ad5c2d50.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__35AbD\",\"dialogsItems\":\"Dialogs_dialogsItems__2Morx\",\"active\":\"Dialogs_active__BW2jY\",\"dialog\":\"Dialogs_dialog__1MkZl\",\"messages\":\"Dialogs_messages__1OOzU\",\"message\":\"Dialogs_message__23sn1\"};","import React from \"react\";\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        < div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 =  maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={'newMessageBody'} placeholder={'Enter your message'} validate = {[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'button'}>Add message</Field>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default AddMessageFormRedux;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageFormRedux from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map\r\n    (\r\n        dialogs => (<DialogItem name={dialogs.name} key={dialogs.id} id={dialogs.id}/>)\r\n    );\r\n\r\n    let messagesElements = props.messagesData.map(\r\n        messagesData => (<Message message={messagesData.message} key={messagesData.id}/>)\r\n    );\r\n\r\n    const addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.MessagesPage.dialogs,\r\n        messagesData: state.MessagesPage.messagesData,\r\n        newMessageBody: state.MessagesPage.newMessageBody\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nlet DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}